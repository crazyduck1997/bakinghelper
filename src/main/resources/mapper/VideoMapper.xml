<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.bakinghelper.dao.VideoDao" >
  <resultMap id="BaseResultMap" type="Video" >
    <id column="video_id" property="videoId" jdbcType="INTEGER" />
    <result column="video_name" property="videoName" jdbcType="VARCHAR" />
    <result column="author_id" property="authorId" jdbcType="INTEGER" />
    <result column="collect_num" property="collectNum" jdbcType="INTEGER" />
    <result column="cook_num" property="cookNum" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="learn" property="learn" jdbcType="VARCHAR" />
    <result column="video_href" property="videoHref" jdbcType="VARCHAR" />
    <result column="img_href" property="imgHref" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video
    where video_id = #{videoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Video" >
    insert into video (video_id, video_name, author_id, 
      collect_num, cook_num, type, 
      content, introduce, learn, 
      video_href, img_href)
    values (#{videoId,jdbcType=INTEGER}, #{videoName,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, 
      #{collectNum,jdbcType=INTEGER}, #{cookNum,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{learn,jdbcType=VARCHAR}, 
      #{videoHref,jdbcType=VARCHAR}, #{imgHref,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="Video" >
    update video
    set video_name = #{videoName,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      collect_num = #{collectNum,jdbcType=INTEGER},
      cook_num = #{cookNum,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      learn = #{learn,jdbcType=VARCHAR},
      video_href = #{videoHref,jdbcType=VARCHAR},
      img_href = #{imgHref,jdbcType=VARCHAR}
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select video_id, video_name, author_id, collect_num, cook_num, type, content, introduce, 
    learn, video_href, img_href
    from video
    where video_id = #{videoId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select video_id, video_name, author_id, collect_num, cook_num, type, content, introduce, 
    learn, video_href, img_href
    from video
  </select>
</mapper>