<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.bakinghelper.dao.UserDao" >
  <resultMap id="BaseResultMap" type="User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="head_img" property="headImg" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="banggong" property="banggong" jdbcType="INTEGER" />
    <result column="watch_num" property="watchNum" jdbcType="INTEGER" />
    <result column="fans_num" property="fansNum" jdbcType="INTEGER" />
    <result column="medal" property="medal" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <collection property="collectFoodOrderList" ofType="CollectFoodOrder">
      <id property="cId" column="c_id"></id>
      <result property="cName" column="c_name"></result>
      <result property="cIntroduce" column="c_introduce"></result>
      <result property="uId" column="u_id"></result>
    </collection>
  </resultMap>

  <resultMap id="collectVideo" type="com.qf.bakinghelper.entity.Video">
    <id column="video_id"  property="videoId" />
    <result column="video_name" property="videoName" />
    <result column="img_href" property="imgHref" />
  </resultMap>

  <resultMap id="userMedal" type="Medal">
    <id column="id" property="id" />
    <result column="medal_name" property="medalName"/>
  </resultMap>




  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="User" >
    insert into user (user_id, account_id, sex,
      head_img, nickname, introduce,
      email, address, banggong,
      watch_num, fans_num, medal,
      grade, phone, qq, wechat,
      password)
    values (#{userId,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{headImg,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{banggong,jdbcType=INTEGER},
      #{watchNum,jdbcType=INTEGER}, #{fansNum,jdbcType=INTEGER}, #{medal,jdbcType=INTEGER},
      #{grade,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByAccountId" parameterType="User" >
    update user
    set
     <trim suffixOverrides=",">
     <if test="accountId != null">
       account_id = #{accountId,jdbcType=VARCHAR},
     </if>
       <if test="sex != null">
         sex = #{sex,jdbcType=VARCHAR},
       </if>
       <if test="headImg != null">
         head_img = #{headImg,jdbcType=VARCHAR},
       </if>
       <if test="nickname != null">
         nickname = #{nickname,jdbcType=VARCHAR},
       </if>
       <if test="introduce != null">
         introduce = #{introduce,jdbcType=VARCHAR},
       </if>
       <if test="email != null">
         email = #{email,jdbcType=VARCHAR},
       </if>
       <if test="address != null">
         address = #{address,jdbcType=VARCHAR},
       </if>
       <if test="banggong != null">
         banggong = #{banggong,jdbcType=INTEGER},
       </if>
       <if test="watchNum != null">
         watch_num = #{watchNum,jdbcType=INTEGER},
       </if>
       <if test="fansNum != null">
         fans_num = #{fansNum,jdbcType=INTEGER},
       </if>
       <if test="medal != null">
         medal = #{medal,jdbcType=INTEGER},
     </if>
       <if test="grade != null">
         grade = #{grade,jdbcType=VARCHAR},
       </if>
       <if test="phone != null">
         phone = #{phone,jdbcType=VARCHAR},
       </if>
       <if test="qq != null">
         qq = #{qq,jdbcType=VARCHAR},
       </if>
       <if test="wechat != null">
         wechat = #{wechat,jdbcType=VARCHAR},
       </if>
       <if test="password != null">
         password = #{password,jdbcType=VARCHAR},
       </if>
     </trim>
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select user_id, account_id, sex, head_img, nickname, introduce, email, address, banggong,
    watch_num, fans_num, medal, grade, phone, qq, wechat, password
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select user_id, account_id, sex, head_img, nickname, introduce, email, address, banggong,
    watch_num, fans_num, medal, grade, phone, qq, wechat, password
    from user
  </select>

  <select id="findByPhone" resultType="User" resultMap="BaseResultMap">
    select user_id, account_id, sex, head_img, nickname, introduce, email, address, banggong,
    watch_num, fans_num, medal, grade, phone, qq, wechat, password
    from user
    where phone = #{phone}
  </select>

  <select id="findByAccountId" resultType="User" resultMap="BaseResultMap">
    select user_id, account_id, sex, head_img, nickname, introduce, email, address, banggong,
    watch_num, fans_num, medal, grade, phone, qq, wechat, password
    from user
    where account_id = #{accountId}
  </select>

  <select id="findCollectVideos" resultType="Video" resultMap="collectVideo">
    select video_id,video_name,img_href
     from video LEFT JOIN collect_videos on video_id = v_id
    where u_id = #{userId}
  </select>

  <select id="findMyMedals" resultType="Medal" resultMap="userMedal">
    select m.id,medal_name
    from medal m left join user_medal on m.id = m_id
    left join user on u_id = user_id
    where user_id = #{uid}
  </select>



</mapper>