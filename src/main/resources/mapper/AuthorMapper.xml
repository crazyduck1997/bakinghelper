<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.bakinghelper.dao.AuthorDao">
  <resultMap id="BaseResultMap" type="Author">
    <id column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="author_img" property="authorImg"/>
    <result column="author_description" jdbcType="VARCHAR" property="authorDescription" />
    <collection property="videos" ofType="com.qf.bakinghelper.entity.Video">
      <id column="video_id" jdbcType="INTEGER" property="videoId" />
      <result column="video_name" jdbcType="VARCHAR" property="videoName" />
      <result column="author_id" jdbcType="INTEGER" property="authorId" />
      <result column="collect_num" jdbcType="INTEGER" property="collectNum" />
      <result column="cook_num" jdbcType="INTEGER" property="cookNum" />
      <result column="feature_id" jdbcType="INTEGER" property="featureId" />
      <result column="type_id" jdbcType="INTEGER" property="typeId" />
      <result column="content" jdbcType="VARCHAR" property="content" />
      <result column="introduce" jdbcType="VARCHAR" property="introduce" />
      <result column="learn" jdbcType="VARCHAR" property="learn" />
      <result column="video_href" jdbcType="VARCHAR" property="videoHref" />
      <result column="img_href" jdbcType="VARCHAR" property="imgHref" />
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Author">
    insert into author (author_id, author_name, author_description
      )
    values (#{authorId,jdbcType=INTEGER}, #{authorName,jdbcType=VARCHAR}, #{authorDescription,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="Author">
    update author
    set author_name = #{authorName,jdbcType=VARCHAR},
      author_description = #{authorDescription,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select author_id, author_name, author_description
    from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select author_id, author_name, author_description
    from author
  </select>

<!--  查询导师的所有信息及视频-->
    <select id="findAuthorById" resultMap="BaseResultMap">
        select author.*,video.* from author,video
            where author.author_id = video.author_id
            and author.author_id = #{id}
    </select>
</mapper>